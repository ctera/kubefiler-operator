/*
 * CTERA Gateway
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cteraopenapi

import (
	"encoding/json"
)

// ShareAccessControlEntry struct for ShareAccessControlEntry
type ShareAccessControlEntry struct {
	PrincipalType PrincipalType  `json:"principal_type"`
	Name          string         `json:"name"`
	Perm          FileAccessMode `json:"perm"`
}

// NewShareAccessControlEntry instantiates a new ShareAccessControlEntry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShareAccessControlEntry(principalType PrincipalType, name string, perm FileAccessMode) *ShareAccessControlEntry {
	this := ShareAccessControlEntry{}
	this.PrincipalType = principalType
	this.Name = name
	this.Perm = perm
	return &this
}

// NewShareAccessControlEntryWithDefaults instantiates a new ShareAccessControlEntry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShareAccessControlEntryWithDefaults() *ShareAccessControlEntry {
	this := ShareAccessControlEntry{}
	return &this
}

// GetPrincipalType returns the PrincipalType field value
func (o *ShareAccessControlEntry) GetPrincipalType() PrincipalType {
	if o == nil {
		var ret PrincipalType
		return ret
	}

	return o.PrincipalType
}

// GetPrincipalTypeOk returns a tuple with the PrincipalType field value
// and a boolean to check if the value has been set.
func (o *ShareAccessControlEntry) GetPrincipalTypeOk() (*PrincipalType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrincipalType, true
}

// SetPrincipalType sets field value
func (o *ShareAccessControlEntry) SetPrincipalType(v PrincipalType) {
	o.PrincipalType = v
}

// GetName returns the Name field value
func (o *ShareAccessControlEntry) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ShareAccessControlEntry) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ShareAccessControlEntry) SetName(v string) {
	o.Name = v
}

// GetPerm returns the Perm field value
func (o *ShareAccessControlEntry) GetPerm() FileAccessMode {
	if o == nil {
		var ret FileAccessMode
		return ret
	}

	return o.Perm
}

// GetPermOk returns a tuple with the Perm field value
// and a boolean to check if the value has been set.
func (o *ShareAccessControlEntry) GetPermOk() (*FileAccessMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Perm, true
}

// SetPerm sets field value
func (o *ShareAccessControlEntry) SetPerm(v FileAccessMode) {
	o.Perm = v
}

func (o ShareAccessControlEntry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["principal_type"] = o.PrincipalType
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["perm"] = o.Perm
	}
	return json.Marshal(toSerialize)
}

type NullableShareAccessControlEntry struct {
	value *ShareAccessControlEntry
	isSet bool
}

func (v NullableShareAccessControlEntry) Get() *ShareAccessControlEntry {
	return v.value
}

func (v *NullableShareAccessControlEntry) Set(val *ShareAccessControlEntry) {
	v.value = val
	v.isSet = true
}

func (v NullableShareAccessControlEntry) IsSet() bool {
	return v.isSet
}

func (v *NullableShareAccessControlEntry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShareAccessControlEntry(val *ShareAccessControlEntry) *NullableShareAccessControlEntry {
	return &NullableShareAccessControlEntry{value: val, isSet: true}
}

func (v NullableShareAccessControlEntry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShareAccessControlEntry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
