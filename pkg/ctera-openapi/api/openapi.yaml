openapi: 3.0.0
info:
  license:
    name: MIT
  title: CTERA Gateway
  version: 1.0.0
servers:
- url: http://localhost:9090/v1.0
security:
- jwt: []
paths:
  /login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
        description: User Credentials
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: JWT token
        "401":
          description: Access token is missing or invalid
      security: []
      summary: Get JWT from User/Password
      tags:
      - login
  /logout:
    post:
      responses:
        "200":
          description: Successful Logout
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      security:
      - jwt: []
      summary: Log out
      tags:
      - login
  /shares:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shares'
          description: A paged array of shares
          headers:
            x-next:
              description: A link to the next page of responses
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: List all shares
      tags:
      - shares
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Share'
        description: Share to add
      responses:
        "200":
          description: Null response
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Create a new Share
      tags:
      - shares
  /shares/{name}:
    delete:
      parameters:
      - description: The name of the share to delete
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Null response
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Delete a share
      tags:
      - shares
    get:
      parameters:
      - description: The name of the share to retrieve
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Share'
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Get the specified share
      tags:
      - shares
    put:
      parameters:
      - description: The name of the share to update
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Share'
        description: Share parameters to update
      responses:
        "200":
          description: Null response
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Update existing share
      tags:
      - shares
  /shares/{name}/acl:
    delete:
      operationId: ctera_gateway_openapi.api.shares.remove_acl
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The principal type
        explode: true
        in: query
        name: principal_type
        required: false
        schema:
          $ref: '#/components/schemas/PrincipalType'
        style: form
      - description: The principal name
        explode: true
        in: query
        name: principal_name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Remove the ACL of the share
      tags:
      - shares
    get:
      operationId: ctera_gateway_openapi.api.shares.get_acl
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ShareAccessControlEntrys'
                type: array
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: List the ACLs of the share
      tags:
      - shares
    post:
      operationId: ctera_gateway_openapi.api.shares.set_acl
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareAccessControlEntrys'
        description: Share parameters to update
      responses:
        "200":
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Set the ACLs of the share (override the current ACL list)
      tags:
      - shares
    put:
      operationId: ctera_gateway_openapi.api.shares.add_acl
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareAccessControlEntrys'
        description: Share parameters to update
      responses:
        "200":
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Add the ACLs of the share
      tags:
      - shares
  /shares/{name}/screened_file_types:
    delete:
      operationId: ctera_gateway_openapi.api.shares.remove_screened_file_type
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: File type to remove
        explode: true
        in: query
        name: file_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Remove from the screened file type of the share
      tags:
      - shares
    get:
      operationId: ctera_gateway_openapi.api.shares.get_screened_file_types
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: List the screened file types of the share
      tags:
      - shares
    post:
      operationId: ctera_gateway_openapi.api.shares.set_screened_file_types
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: Share parameters to update
      responses:
        "200":
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Set the list of screened file types of the share (override the current
        list)
      tags:
      - shares
    put:
      operationId: ctera_gateway_openapi.api.shares.add_screened_file_types
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: Share parameters to update
      responses:
        "200":
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Add to the screened files types of the share
      tags:
      - shares
  /shares/{name}/trusted_nfs_clients:
    delete:
      operationId: ctera_gateway_openapi.api.shares.remove_trusted_nfs_client
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: IP Address
        explode: true
        in: query
        name: address
        required: false
        schema:
          type: string
        style: form
      - description: Netmask
        explode: true
        in: query
        name: netmask
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Remove the Trusted NFS Client of the share
      tags:
      - shares
    get:
      operationId: ctera_gateway_openapi.api.shares.get_trusted_nfs_clients
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NFSv3AccessControlEntrys'
                type: array
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: List the Trusted NFS Clients of the share
      tags:
      - shares
    post:
      operationId: ctera_gateway_openapi.api.shares.set_trusted_nfs_clients
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NFSv3AccessControlEntrys'
        description: Share parameters to update
      responses:
        "200":
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Set the Trusted NFS Clients of the share (override the current list)
      tags:
      - shares
    put:
      operationId: ctera_gateway_openapi.api.shares.add_trusted_nfs_clients
      parameters:
      - description: The name of the share
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NFSv3AccessControlEntrys'
        description: Share parameters to update
      responses:
        "200":
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Add the Trusted NFS Clients of the share
      tags:
      - shares
  /users:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
          description: A paged array of users
          headers:
            x-next:
              description: A link to the next page of responses
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: List all users
      tags:
      - users
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User to add to the system
      responses:
        "200":
          description: Null response
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Create a User
      tags:
      - users
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: User Information
      responses:
        "200":
          description: Null response
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Update a user
      tags:
      - users
  /users/{userName}:
    delete:
      parameters:
      - description: The username of the user to retrieve
        explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Null response
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Delete a user
      tags:
      - users
    get:
      parameters:
      - description: The username of the user to retrieve
        explode: false
        in: path
        name: userName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Expected response to a valid request
        "401":
          description: Access token is missing or invalid
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
          description: Default error json
      summary: Info for a specific user
      tags:
      - users
components:
  responses:
    GenericError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorMessage'
      description: Default error json
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    AclAccess:
      enum:
      - WindowsNT
      - OnlyAuthenticatedUsers
      type: string
    ClientSideCaching:
      enum:
      - Manual
      - Documents
      - Disabled
      type: string
    Credentials:
      example:
        username: admin
        password: adminPassword
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    FileAccessMode:
      enum:
      - RW
      - RO
      - NA
      type: string
    NFSv3AccessControlEntry:
      example:
        address: address
        netmask: netmask
      properties:
        address:
          type: string
        netmask:
          type: string
        perm:
          $ref: '#/components/schemas/FileAccessMode'
      required:
      - address
      - netmask
      - perm
    NFSv3AccessControlEntrys:
      items:
        $ref: '#/components/schemas/NFSv3AccessControlEntry'
      type: array
    PrincipalType:
      enum:
      - LU
      - LG
      - DU
      - DG
      type: string
    Share:
      example:
        trusted_nfs_clients:
        - address: address
          netmask: netmask
        - address: address
          netmask: netmask
        export_to_ftp: true
        indexed: true
        export_to_nfs: true
        acl:
        - name: name
        - name: name
        directory: directory
        export_to_pc_agent: true
        export_to_rsync: true
        dir_permissions: 0
        name: name
        export_to_afp: true
        comment: comment
      properties:
        name:
          type: string
        directory:
          type: string
        acl:
          items:
            $ref: '#/components/schemas/ShareAccessControlEntry'
          type: array
        access:
          $ref: '#/components/schemas/AclAccess'
        client_side_caching:
          $ref: '#/components/schemas/ClientSideCaching'
        dir_permissions:
          type: integer
        comment:
          type: string
        export_to_afp:
          type: boolean
        export_to_ftp:
          type: boolean
        export_to_nfs:
          type: boolean
        export_to_pc_agent:
          type: boolean
        export_to_rsync:
          type: boolean
        indexed:
          type: boolean
        trusted_nfs_clients:
          items:
            $ref: '#/components/schemas/NFSv3AccessControlEntry'
          type: array
      required:
      - name
    Shares:
      items:
        $ref: '#/components/schemas/Share'
      type: array
    ShareAccessControlEntry:
      example:
        name: name
      properties:
        principal_type:
          $ref: '#/components/schemas/PrincipalType'
        name:
          type: string
        perm:
          $ref: '#/components/schemas/FileAccessMode'
      required:
      - name
      - perm
      - principal_type
    ShareAccessControlEntrys:
      items:
        $ref: '#/components/schemas/ShareAccessControlEntry'
      type: array
    User:
      example:
        _uuid: 8a82db21-15b5-4805-ac6b-36a558a0c69d
        uid: 1
        username: admin
        fullName: Administrator
        email: admin@example.com
        password: admin
      properties:
        _uuid:
          format: uuid
          readOnly: true
          type: string
        uid:
          type: integer
        username:
          type: string
        fullName:
          type: string
        email:
          format: email
          type: string
        password:
          type: string
      required:
      - username
    Users:
      items:
        $ref: '#/components/schemas/User'
      type: array
    ErrorMessage:
      properties:
        status:
          format: int32
          type: integer
        type:
          type: string
        title:
          type: string
        detail:
          type: string
      required:
      - status
      type: object
  securitySchemes:
    jwt:
      bearerFormat: JWT
      scheme: bearer
      type: http
      x-bearerInfoFunc: ctera_gateway_openapi.api.token.decode_token
